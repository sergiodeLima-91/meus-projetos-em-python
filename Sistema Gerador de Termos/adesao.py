# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QComboBox
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from datetime import date


class Ui_Adesao_MainWindow(object):                

        def GerarTermoDeAdesao(self):
                self.cnv = canvas.Canvas(f'{self.lineEdit_name.text().upper()} - ADESÃO.pdf')
                self.cnv.setFont(psfontname='Times-Roman',size=10)


                #INSERIR IMAGEM DO NOME DO PROGRAMA E LOGO:
                self.cnv.drawImage(r'system_name_logo.png',x=40,y=800,width=190,height=30)
                self.cnv.drawImage(r'system_name_logo.png',x=372,y=10,width=190,height=30)

                #INSERIR IMAGEM DOS DADOS DA EMPRESA:
                self.cnv.drawImage(r'company_data.png', x=290, y=710, width=270, height=50)
                                #INSERIR DADOS DA EMPRESA
                self.cnv.drawString(x=298,y=737, text= self.lineEdit_razao_social.text().upper())
                self.cnv.drawString(x=298,y=725, text= self.lineEdit_cnpj.text().upper())

                #INSERIR IMAGEM DE TÍTULO, CABEÇALHO E TIPO DE PLANO:
                self.cnv.drawImage(r'header_sgt.png',x=40,y=600,width=520,height=110)
                                #INSERIR DADOS DO PLANO:
                self.plain_type = 'MONITORAMENTO'
                if self.radioButton_monitoring.isChecked():
                        self.plain_type =   'MONITORAMENTO'
                if self.radioButton_bronze01.isChecked():
                        self.plain_type =   'BRONZE 01'
                if self.radioButton_bronze02.isChecked():
                        self.plain_type =   'BRONZE 02'
                if self.radioButton_silver01.isChecked():
                        self.plain_type =   'PRATA 01'
                if self.radioButton_silver02.isChecked():
                        self.plain_type =   'PRATA 02'
                if self.radioButton_gold.isChecked():
                        self.plain_type =   'OURO'
                self.cnv.drawString(x=75,y=609, text= self.plain_type.upper())


                #INSERIR IMAGEM DOS DADOS DO ASSOCIADO E ENDEREÇO:
                self.cnv.drawImage(r'clientdata_address.png',x=40,y=440,width=520,height=160)
                #INSERIR DADOS DO ASSOCIADO:
                                #NOME:
                self.cnv.drawString(x=155, y=556, text= self.lineEdit_name.text().upper())
                                #RG:
                self.cnv.drawString(x=62, y=536, text= self.lineEdit_rg.text().upper())
                                #CPF/CNPJ:
                self.cnv.drawString(x=200, y=535, text= self.lineEdit_cpf.text().upper())
                                #DATA DE NASCIMENTO:
                self.cnv.drawString(x=425, y=535, text= self.lineEdit_birth.text().upper())
                                #NACIONALIDADE:
                self.cnv.drawString(x=105, y=512, text= self.lineEdit_nationality.text().upper())
                                #DATA DA RUA:
                self.cnv.drawString(x=290, y=511, text= self.lineEdit_street.text().upper())
                                #NUMERO:
                self.cnv.drawString(x=62, y=491, text= self.lineEdit_number.text().upper())
                                #COMPLEMENTO:
                self.cnv.drawString(x=160, y=491, text= self.lineEdit_comp.text().upper())
                                #BAIRRO:
                self.cnv.drawString(x=380, y=491, text= self.lineEdit_neghbordhood.text().upper())
                                #CEP:
                self.cnv.drawString(x=62, y=469, text= self.lineEdit_cep.text().upper())
                                #CIDADE:
                self.cnv.drawString(x=205, y=469, text= self.lineEdit_city.text().upper())
                                #UF:
                self.cnv.drawString(x=510, y=469, text= self.lineEdit_uf.text().upper())
                                #TELEFONE 1:
                self.cnv.drawString(x=95, y=448, text= self.lineEdit_phone1.text().upper())
                                #TELEFONE 2:
                self.cnv.drawString(x=275, y=448, text= self.lineEdit_phone2.text().upper())


                #INSERIR IMAGEM DOS DADOS DO VEÍCULO:
                self.cnv.drawImage(r'vehicle_data.png',x=40,y=340,width=520,height=100)
                #INSERIR DADOS DO VEICULO:
                                #MONTADORA:
                self.cnv.drawString(x=88, y=403, text= self.lineEdit_assembler.text().upper())
                                #MODELO:
                self.cnv.drawString(x=260,y=403, text= self.lineEdit_model.text().upper())
                                #ANO:
                self.cnv.drawString(x=450, y=404, text=self.lineEdit_year.text())
                                #PLACA:
                self.cnv.drawString(x=70, y=385, text= self.lineEdit_plate.text().upper())
                                #COR:
                self.cnv.drawString(x=230, y=385, text= self.lineEdit_color.text().upper())
                                #RENAVAM:
                self.cnv.drawString(x=410, y=385, text= self.lineEdit_renavam.text().upper())
                                #CHASSI:
                self.cnv.drawString(x=73, y=366, text= self.lineEdit_chassis.text().upper())
                        #VALOR FIPE:
                self.cnv.drawString(x=426, y=366, text= self.lineEdit_fipe_value.text())
                                #CÓD.FIPE:
                self.cnv.drawString(x=85, y=347, text= self.lineEdit_fipe_code.text())


                #INSERIR IMAGEM DOS DADOS FINANCEIROS:
                self.cnv.drawImage(r'finance.png',x=40,y=290,width=520,height=50)
                #INSERIR DADOS FINANCEIROS:
                                #MENSALIDADE:
                self.cnv.drawString(x=106, y=298, text= self.lineEdit_monthly_payment.text())
                                #ADESÃO:
                self.cnv.drawString(x=220, y=298, text= self.lineEdit_membership_fee.text())
                                #PARCELA ÚNICA:
                self.cnv.drawString(x=492, y=298, text= self.lineEdit_total_payment.text())


                #INSERIR IMAGEM DO CAMPO DA COBERTURA:
                self.cnv.drawImage(r'coverages.png',x=40,y=115,width=520,height=175)
                #INSERIR DADOS DA COBERTURA:
                self.coberturas = []
                
                        #SELEÇÃO DA COBERTURA:
                if self.checkBox_monitoring.isChecked():
                        self.coberturas.append(self.checkBox_monitoring.text())
                if self.checkBox_robbery.isChecked():
                        self.coberturas.append(self.checkBox_robbery.text())
                if self.checkBox_theft.isChecked():
                        self.coberturas.append(self.checkBox_theft.text())
                if self.checkBox_collision.isChecked():
                        self.coberturas.append(self.checkBox_collision.text())
                if self.checkBox_pt.isChecked():
                        self.coberturas.append(self.checkBox_pt.text())
                if self.checkBox_winch3.isChecked():
                        self.coberturas.append(self.checkBox_winch3.text())
                if self.checkBox_winch6.isChecked():
                        self.coberturas.append(self.checkBox_winch6.text())
                if self.checkBox_unlimited_winch.isChecked():
                        self.coberturas.append(self.checkBox_unlimited_winch.text())
                if self.checkBox_winch500.isChecked():
                        self.coberturas.append(self.checkBox_winch500.text())
                if self.checkBox_glasses.isChecked():
                        self.coberturas.append(self.checkBox_glasses.text())
                if self.checkBox_others.isChecked():
                        self.coberturas.append(self.checkBox_others.text())
                self.eixo_y = 240
                for cobertura in self.coberturas:
                        self.cnv.drawString(x=50, y= self.eixo_y, text=f'{cobertura}')
                        self.eixo_y -= 11

                #IMPRIMIR DATA ATUAL NO DOCUMENTO E NOME FANTASIA DA EMPRESA:
                self.day = date.today().day
                self.month = date.today().month
                self.year = date.today().year
                self.month_current = str()
                if self.month == 1:
                        self.month_current = 'JANEIRO'
                elif self.month == 2:
                        self.month_current = 'FEVEREIRO'
                elif self.month == 3:
                       self. month_current = 'MARCO'
                elif self.month == 4:
                        self.month_current = 'ABRIL'
                elif self.month == 5:
                        self.month_current = 'MAIO'
                elif self.month == 6:
                        self.month_current = 'JUNHO'
                elif self.month == 7:
                        self.month_current = 'JULHO'
                elif self.month == 8:
                        self.month_current = 'AGOSTO'
                elif self.month == 9:
                        self.month_current = 'SETEMBRO'
                elif self.month == 10:
                        self.month_current = 'OUTUBRO'
                elif self.month == 11:
                        self.month_current = 'NOVEMBRO'
                elif self.month == 12:
                        self.month_current = 'DEZEMBRO'

                self.cnv.setFont(psfontname='Times-Italic',size=10)
                self.cnv.drawString(x=40,y=75,text= self.lineEdit_razao_social.text().upper())
                self.cnv.setFont(psfontname='Times-BoldItalic',size=10)
                self.cnv.drawString(x=40,y=21,text= 'CAMPINA GRANDE ,'  + f' {self.day} de {self.month_current} de {self.year}')

                #SALVAR EM PDF:
                self.cnv.save()


#========================================== GERAÇÃO DE TERMO DE ENCAMINHAMENTO ==========================================

        def GerarTermoDeEncaminhamento(self):
                self.cnv = canvas.Canvas(f'{self.lineEdit_name.text().upper()} - ENCAMINHAMENTO.pdf')

                #INSERIR IMAGEM DO NOME DO PROGRAMA E LOGO:
                self.cnv.drawImage(r'system_name_logo.png',x=40,y=800,width=190,height=30)
                self.cnv.drawImage(r'system_name_logo.png',x=372,y=10,width=190,height=30)

                #INSERIR IMAGEM DOS DADOS DA EMPRESA:
                self.cnv.drawImage(r'company_data.png', x=290, y=710, width=270, height=55)
                                #INSERIR DADOS DA EMPRESA
                self.cnv.setFont(psfontname='Times-Roman',size=12)
                self.cnv.drawString(x=298,y=737, text= self.lineEdit_razao_social.text().upper())
                self.cnv.drawString(x=298,y=725, text= self.lineEdit_cnpj.text().upper())

                #INSERIR IMAGEM DO TIPO DE TERMO:
                self.cnv.drawImage(r'term_type.png',x=40,y=710,width=230,height=20)
                                #INSERIR TIPO DE TERMO
                self.cnv.setFont(psfontname='Times-Bold',size=12)
                self.cnv.drawString(x=100,y=717, text= 'ENCAMINHAMENTO')

                #INSERIR IMAGEM DOS DETALHES DO TIPO DE TERMO:
                self.cnv.drawImage(r'details_term_encaminhamento.png',x=40,y=615,width=520,height=94)

                #INSERIR IMAGEM DOS DADOS DO ASSOCIADO:
                self.cnv.drawImage(r'clientdata_cancel.png',x=40,y=520,width=520,height=94)
                #INSERIR DADOS DO ASSOCIADO:
                                #NOME/RAZÃO SOCIAL:
                self.cnv.drawString(x=155, y=571, text= self.lineEdit_name.text().upper())
                                #CPF/CNPJ:
                self.cnv.drawString(x=85, y=549.5, text= self.lineEdit_cpf.text().upper())
                                #MONTADORA:
                self.cnv.drawString(x=285, y=549, text= self.lineEdit_assembler.text().upper())
                                #MODELO:
                self.cnv.drawString(x=415, y=549, text= self.lineEdit_model.text().upper())
                                #ANO:
                self.cnv.drawString(x=85, y=527, text= self.lineEdit_year.text().upper())
                                #PLACA:
                self.cnv.drawString(x=265, y=527, text= self.lineEdit_plate.text().upper())
                                #COR:
                self.cnv.drawString(x=405, y=527, text= self.lineEdit_color.text().upper())

                #INSERIR IMAGEM DOS DADOS FINANCEIROS:
                self.cnv.drawImage(r'finance.png',x=40,y=470,width=520,height=50)
                #INSERIR DADOS FINANCEIROS:
                                #MENSALIDADE:
                self.cnv.drawString(x=106, y=477.5, text= self.lineEdit_monthly_payment.text().upper())
                               #TAXA DE ADESÃO:
                self.cnv.drawString(x=222, y=477.5, text= self.lineEdit_membership_fee.text().upper())

                #ENCERRAMENTO:
                                #CAPTAÇÃO DA DATA ATUAL:
                self.day = date.today().day
                self.month = date.today().month
                self.year = date.today().year
                self.month_current = str()
                if self.month == 1:
                        self.month_current = 'JANEIRO'
                elif self.month == 2:
                        self.month_current = 'FEVEREIRO'
                elif self.month == 3:
                        self.month_current = 'MARCO'
                elif self. month == 4:
                        self.month_current = 'ABRIL'
                elif self.month == 5:
                        self.month_current = 'MAIO'
                elif self.month == 6:
                        self.month_current = 'JUNHO'
                elif self.month == 7:
                        self.month_current = 'JULHO'
                elif self.month == 8:
                        self.month_current = 'AGOSTO'
                elif self.month == 9:
                        self.month_current = 'SETEMBRO'
                elif self.month == 10:
                        self.month_current = 'OUTUBRO'
                elif self.month == 11:
                        self.month_current = 'NOVEMBRO'
                elif self.month == 12:
                        self.month_current = 'DEZEMBRO'

                self.cnv.drawString(x=40,y=400, text='Sem mais,')
                self.cnv.setFont(psfontname='Times-Italic',size=12)
                                #NOME FANTASIA DA EMPRESA PARA ASSINATURA:
                self.cnv.drawString(x=40,y=300,text= self.lineEdit_razao_social.text().upper())
                self.cnv.setFont(psfontname='Times-BoldItalic',size=12)
                                #IMPRIMIR DATA ATUAL E CIDADE DA SEDE ADMINISTRATIVA NO DOCUMENTO:
                self.cnv.drawString(x=40,y=200,text= 'CAMPINA GRANDE ,'  + f' {self.day} de {self.month_current} de {self.year}')


                #SALVAR PDF:
                self.cnv.save()

#========================================== GERAÇÃO DE TERMO DE ENTREGA DE VEÍCULO ==========================================

        def GerarTermoDeEntregaDeVeiculo(self):
                self.cnv = canvas.Canvas(f'{self.lineEdit_name.text().upper()} - ENTREGA DE VEÍCULO.pdf')

                #INSERIR IMAGEM DO NOME DO PROGRAMA E LOGO:
                self.cnv.drawImage(r'system_name_logo.png',x=40,y=800,width=190,height=30)
                self.cnv.drawImage(r'system_name_logo.png',x=372,y=10,width=190,height=30)

                #INSERIR IMAGEM DOS DADOS DA EMPRESA:
                self.cnv.drawImage(r'company_data.png', x=290, y=710, width=270, height=55)
                                #INSERIR DADOS DA EMPRESA
                self.cnv.setFont(psfontname='Times-Roman',size=12)
                self.cnv.drawString(x=298,y=737, text='CLUBE DE BENEFICIOS MÁXIMA PROTEÇÃO')
                self.cnv.drawString(x=298,y=725, text='40.989.892/0001-10')

                #INSERIR IMAGEM DO TIPO DE TERMO:
                self.cnv.drawImage(r'term_type.png',x=40,y=710,width=230,height=20)
                                #INSERIR TIPO DE TERMO
                self.cnv.setFont(psfontname='Times-Bold',size=12)
                self.cnv.drawString(x=100,y=716.5, text= 'ENTREGA DE VEÍCULO')

                #INSERIR IMAGEM DOS DETALHES DO TIPO DE TERMO:
                self.cnv.drawImage(r'details_term_entregadeveiculo.png',x=40,y=560,width=520,height=150)

                #INSERIR IMAGEM DOS DADOS DO ASSOCIADO:
                self.cnv.drawImage(r'clientdata_cancel.png',x=40,y=466,width=520,height=94)
                #INSERIR DADOS DO ASSOCIADO:
                                #NOME/RAZÃO SOCIAL:
                self.cnv.drawString(x=155, y=517, text= self.lineEdit_name.text().upper())
                                #CPF/CNPJ:
                self.cnv.drawString(x=85, y=496, text= self.lineEdit_cpf.text().upper())
                                #MONTADORA:
                self.cnv.drawString(x=285, y=496, text= self.lineEdit_assembler.text.upper())
                                #MODELO:
                self.cnv.drawString(x=415, y=496, text= self.lineEdit_model.text().upper())
                                #ANO:
                self.cnv.drawString(x=85, y=473, text= self.lineEdit_year.text().upper())
                                #PLACA:
                self.cnv.drawString(x=265, y=473, text= self.lineEdit_plate.text().upper())
                                #COR:
                self.cnv.drawString(x=405, y=473, text= self.lineEdit_color.text().upper())
                        
                #INSERIR IMAGEM DOS DADOS DO EVENTO:
                self.cnv.drawImage(r'event_data.png', x=40, y=350, width=520, height=115)
                #INSERIR DADOS DO EVENTO:
                                #DATA:
                self.cnv.drawString(x=70, y=423, text= self.dateEdit_start.text())
                                #HORARIO APROXIMADO:
                self.cnv.drawString(x=380, y=423, text=self.lineEdit_hora.text().upper)
                                #RUA ONDE OCORREU O EVENTO:
                self.cnv.drawString(x=180, y=402, text= self.lineEdit_street.text().upper())

                #ENCERRAMENTO:
                                #CAPTAÇÃO DA DATA ATUAL:
                self.day = date.today().day
                self.month = date.today().month
                self.year = date.today().year
                self.month_current = str()
                if self.month == 1:
                        self.self.month_current = 'JANEIRO'
                elif self.month == 2:
                        self.month_current = 'FEVEREIRO'
                elif self.month == 3: 
                        self.month_current = 'MARCO'
                elif self.month == 4:
                        self.month_current = 'ABRIL'
                elif self.month == 5:
                        self.month_current = 'MAIO'
                elif self.month == 6:
                        self.month_current = 'JUNHO'
                elif self.month == 7:
                       self.month_current = 'JULHO'
                elif self.month == 8:
                        self.month_current = 'AGOSTO'
                elif self.month == 9:
                        self.month_current = 'SETEMBRO'
                elif self.month == 10:
                        self.month_current = 'OUTUBRO'
                elif self.month == 11:
                        self.month_current = 'NOVEMBRO'
                elif self.month == 12:
                        self.month_current = 'DEZEMBRO'

                self.cnv.drawString(x=40,y=300, text='Sem mais,')
                self.cnv.setFont(psfontname='Times-Italic',size=12)
                                #NOME FANTASIA DA EMPRESA  E DO ASSOCIADO PARA ASSINATURA:
                self.cnv.line(40, 232, 350, 232)
                self.cnv.drawString(x=40,y=220,text= 'CONSULTOR / VISTORIADOR AUTORIZADO')
                self.cnv.line(40, 152, 350, 152)
                self.cnv.drawString(x=40,y=140,text= 'ASSOCIADO (A)')
                self.cnv.setFont(psfontname='Times-BoldItalic',size=12)
                                #IMPRIMIR DATA ATUAL E CIDADE DA SEDE ADMINISTRATIVA NO DOCUMENTO:
                self.cnv.drawString(x=40,y=23,text= 'CAMPINA GRANDE ,'  + f' {self.day} de {self.month_current} de {self.year}')


                #SALVAR PDF:
                self.cnv.save()

#========================================== GERAÇÃO DE TERMO DE CANCELAMENTO ==========================================

        def GerarTermoDeCancelamento(self):
                self.cnv = canvas.Canvas(f'{self.lineEdit_name.text().upper()} - CANCELAMENTO.pdf')

                #INSERIR IMAGEM DO NOME DO PROGRAMA E LOGO:
                self.cnv.drawImage(r'system_name_logo.png',x=40,y=800,width=190,height=30)
                self.cnv.drawImage(r'system_name_logo.png',x=372,y=10,width=190,height=30)

                #INSERIR IMAGEM DOS DADOS DA EMPRESA:
                self.cnv.drawImage(r'company_data.png', x=290, y=710, width=270, height=55)
                                #INSERIR DADOS DA EMPRESA
                self.cnv.setFont(psfontname='Times-Roman',size=12)
                self.cnv.drawString(x=298,y=737, text= self.lineEdit_razao_social.text().upper())
                self.cnv.drawString(x=298,y=725, text= self.lineEdit_cnpj.text().upper())

                #INSERIR IMAGEM DO TIPO DE TERMO:
                self.cnv.drawImage(r'term_type.png',x=40,y=710,width=230,height=20)
                                #INSERIR TIPO DE TERMO
                self.cnv.setFont(psfontname='Times-Bold',size=12)
                self.cnv.drawString(x=100,y=717, text= 'CANCELAMENTO')

                #INSERIR IMAGEM DOS DETALHES DO TIPO DE TERMO:
                self.cnv.drawImage(r'details_term_cancel.png',x=40,y=615,width=520,height=94)

                #INSERIR IMAGEM DOS DADOS DO ASSOCIADO:
                self.cnv.drawImage(r'clientdata_cancel.png',x=40,y=520,width=520,height=94)
                #INSERIR DADOS DO ASSOCIADO:
                                #NOME/RAZÃO SOCIAL:
                self.cnv.drawString(x=155, y=571, text= self.lineEdit_name.text().upper())
                                #CPF/CNPJ:
                self.cnv.drawString(x=85, y=549, text= self.lineEdit_cpf.text().upper())
                                #MONTADORA:
                self.cnv.drawString(x=285, y=549, text= self.lineEdit_assembler.text().upper())
                                #MODELO:
                self.cnv.drawString(x=415, y=549, text= self.lineEdit_model.text().upper())
                                #ANO:
                self.cnv.drawString(x=85, y=527, text= self.lineEdit_year.text().upper())
                                #PLACA:
                self.cnv.drawString(x=265, y=527, text= self.lineEdit_plate.text().upper())
                                #COR:
                self.cnv.drawString(x=405, y=527, text= self.lineEdit_color.text().upper())

                #INSERIR IMAGEM DOS DADOS FINANCEIROS:
                self.cnv.drawImage(r'finance.png',x=40,y=470,width=520,height=50)
                #INSERIR DADOS FINANCEIROS:
                                #MENSALIDADE:
                self.cnv.drawString(x=106, y=477.5, text= self.lineEdit_monthly_payment.text())
                                #TAXA DE CANCELAMENTO:
                self.cnv.drawString(x=362, y=477.5, text= self.lineEdit_membership_fee.text())

                #ENCERRAMENTO:
                        #CAPTAÇÃO DA DATA ATUAL:
                self.day = date.today().day
                self.month = date.today().month
                self.year = date.today().year
                self.month_current = str()
                if self.month == 1:
                        self.month_current = 'JANEIRO'
                elif self.month == 2:
                        self.month_current = 'FEVEREIRO'
                elif self.month == 3:
                       self. month_current = 'MARCO'
                elif self.month == 4:
                        self.month_current = 'ABRIL'
                elif self.month == 5:
                        self.month_current = 'MAIO'
                elif self.month == 6:
                        self.month_current = 'JUNHO'
                elif self.month == 7:
                        self.month_current = 'JULHO'
                elif self.month == 8:
                        self.month_current = 'AGOSTO'
                elif self.month == 9:
                        self.month_current = 'SETEMBRO'
                elif self.month == 10:
                        self.month_current = 'OUTUBRO'
                elif self.month == 11:
                        self.month_current = 'NOVEMBRO'
                elif self.month == 12:
                        self.month_current = 'DEZEMBRO'

                self.cnv.drawString(x=40,y=400, text='Sem mais,')
                self.cnv.setFont(psfontname='Times-Italic',size=12)
                                #NOME FANTASIA DA EMPRESA PARA ASSINATURA:
                self.cnv.drawString(x=40,y=300,text= 'CLUBE DE BENEFICIOS MÁXIMA PROTEÇÃO')
                self.cnv.setFont(psfontname='Times-BoldItalic',size=12)
                                #IMPRIMIR DATA ATUAL E CIDADE DA SEDE ADMINISTRATIVA NO DOCUMENTO:
                self.cnv.drawString(x=40,y=200,text= 'CAMPINA GRANDE ,'  + f' {self.day} de {self.month_current} de {self.year}')


                #SALVAR PDF:self.
                self.cnv.save()

#========================================== GERAÇÃO DE RECIBO ==========================================

        
        def GerarRecibo(self):
                self.cnv = canvas.Canvas(f'{self.lineEdit_name.text().upper()} - RECIBO.pdf')

                #INSERIR IMAGEM DO NOME DO PROGRAMA E LOGO:
                self.cnv.drawImage(r'system_name_logo.png',x=40,y=800,width=190,height=30)
                self.cnv.drawImage(r'system_name_logo.png',x=372,y=10,width=190,height=30)

                #INSERIR IMAGEM DOS DADOS DA EMPRESA:
                self.cnv.drawImage(r'company_data.png', x=290, y=710, width=270, height=55)
                                #INSERIR DADOS DA EMPRESA
                self.cnv.setFont(psfontname='Times-Roman',size=12)
                self.cnv.drawString(x=298,y=737, text= 'MAXIMA PROTEÇAÕ VEICULAR')
                self.cnv.drawString(x=298,y=725, text= '414.252.0001-85')

                #INSERIR IMAGEM DO TIPO DE TERMO:
                self.cnv.drawImage(r'term_type.png',x=40,y=710,width=230,height=20)
                                #INSERIR TIPO DE TERMO
                self.cnv.setFont(psfontname='Times-Bold',size=12)
                self.cnv.drawString(x=100,y=717, text= 'RECIBO')

                #INSERIR IMAGEM DOS DETALHES DO TIPO DE TERMO:
                self.cnv.drawImage(r'recibo_detalhamento.png',x=40,y=588,width=520,height=120)

                #INSERIR IMAGEM DOS DADOS DO ASSOCIADO:
                self.cnv.drawImage(r'clientdata_cancel.png',x=40,y=495,width=520,height=94)
                #INSERIR DADOS DO ASSOCIADO:
                                #NOME/RAZÃO SOCIAL:
                self.cnv.drawString(x=155, y=546, text= self.lineEdit_name.text().upper())
                                #CPF/CNPJ:
                self.cnv.drawString(x=85, y=524, text= self.lineEdit_cpf.text().upper())
                                #MONTADORA:
                self.cnv.drawString(x=285, y=524, text= self.lineEdit_assembler.text().upper())
                                #MODELO:
                self.cnv.drawString(x=415, y=524, text= self.lineEdit_model.text().upper())
                                #ANO:
                self.cnv.drawString(x=85, y=502, text= self.lineEdit_year.text().upper())
                                #PLACA:
                self.cnv.drawString(x=265, y=502, text= self.lineEdit_plate.text().upper())
                                #COR:
                self.cnv.drawString(x=405, y=502, text= self.lineEdit_color.text().upper())

                #INSERIR IMAGEM DOS DADOS FINANCEIROS:
                self.cnv.drawImage(r'finance.png',x=40,y=445,width=520,height=50)
                #INSERIR DADOS FINANCEIROS:
                                #MENSALIDADE:
                self.cnv.drawString(x=106, y=452.5, text= self.lineEdit_monthly_payment.text().upper())
                                #TAXA DE CANCELAMENTO:
                self.cnv.drawString(x=362, y=452.5, text= self.lineEdit_membership_fee.text().upper())

                #ENCERRAMENTO:
                        #CAPTAÇÃO DA DATA ATUAL:
                self.day = date.today().day
                self.month = date.today().month
                self.year = date.today().year
                self.month_current = str()
                if self.month == 1:
                        month_current = 'JANEIRO'
                elif self.month == 2:
                        month_current = 'FEVEREIRO'
                elif self.month == 3:
                        month_current = 'MARCO'
                elif self.month == 4:
                        month_current = 'ABRIL'
                elif self.month == 5:
                        month_current = 'MAIO'
                elif self.month == 6:
                        month_current = 'JUNHO'
                elif self.month == 7:
                        month_current = 'JULHO'
                elif self.month == 8:
                        month_current = 'AGOSTO'
                elif self.month == 9:
                        month_current = 'SETEMBRO'
                elif self.month == 10:
                        month_current = 'OUTUBRO'
                elif self.month == 11:
                        month_current = 'NOVEMBRO'
                elif self.month == 12:
                        month_current = 'DEZEMBRO'

                self.cnv.drawString(x=40,y=350, text='Sem mais,')
                self.cnv.setFont(psfontname='Times-Italic',size=12)
                                #NOME FANTASIA DA EMPRESA PARA ASSINATURA:
                self.cnv.line(40, 232, 350, 232)
                self.cnv.drawString(x=40,y=220,text= 'CONSULTOR / VISTORIADOR AUTORIZADO')
                self.cnv.line(40, 152, 350, 152)
                self.cnv.drawString(x=40,y=140,text= 'ASSOCIADO (A)')
                self.cnv.setFont(psfontname='Times-BoldItalic',size=12)
                                #IMPRIMIR DATA ATUAL E CIDADE DA SEDE ADMINISTRATIVA NO DOCUMENTO:
                self.cnv.drawString(x=40,y=30,text= 'CAMPINA GRANDE ,'  + f' {self.day} de {self.month_current} de {self.year}')


                #SALVAR PDF:
                self.cnv.save()

        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1505, 499)
                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap(":/icon/sgt_icon_48x48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                MainWindow.setWindowIcon(icon)
                MainWindow.setStyleSheet("QScrollBar:vertical{\n"
        "    border: none;\n"
        "    background-color: rgb(170, 255, 255);\n"
        "    width:14px;\n"
        "    margin: 15px 0 15px 0;\n"
        "    border-radius: 0px;\n"
        "}\n"
        "QScrollBar::handle:vertical{\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    mini-height: 30px;\n"
        "    border-radius: 7px;\n"
        "}\n"
        "QScrollBar::handle:vertical:hover{\n"
        "    background-color: rgb(70, 220, 255);\n"
        "}\n"
        "QScrollBar::handle:vertical:pressed{\n"
        "    background-color: rgb(30, 180, 255);\n"
        "}\n"
        "QScrollBar::sub-line:vertical{\n"
        "    border: none;\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    height: 15px;\n"
        "    border-top-left-radius: 7px;\n"
        "    border-top-right-radius: 7px; \n"
        "    subcontrol-posiiton: top;\n"
        "    subcontrol-origin: margin;\n"
        "}\n"
        "QScrollBar::sub-line:vertical:hover{\n"
        "    background-color: rgb(70, 220, 255);\n"
        "}\n"
        "QScrollBar::sub-line:vertical:pressed{\n"
        "    background-color: rgb(30, 180, 255);\n"
        "}\n"
        "QScrollBar::add-line:vertical{\n"
        "    border: none;\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    height: 15px;\n"
        "    border-bottom-left-radius: 7px;\n"
        "    border-botton-right-radius: 7px;\n"
        "    subcontrol-posiiton: botton;\n"
        "    subcontrol-origin: margin;\n"
        "}\n"
        "QScrollBar::add-line:vertical:hover{\n"
        "    background-color: rgb(70, 220, 255);\n"
        "}\n"
        "QScrollBar::add-line:vertical:pressed{\n"
        "    background-color: rgb(30, 180, 255);\n"
        "}\n"
        "\n"
        "QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical{\n"
        "    background: none;\n"
        "}\n"
        "QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical{\n"
        "    background: none;\n"
        "}\n"
        "\n"
        "/*HORIZONTAL SCROW BAR*/\n"
        "\n"
        "QScrollBar:horizontal{\n"
        "    border: none;\n"
        "    background-color: rgb(170, 255, 255);\n"
        "    heigth:14px;\n"
        "    border-radius: 0px;\n"
        "}\n"
        "QScrollBar::handle:horizontal{\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    mini-height: 30px;\n"
        "    border-radius: 7px;\n"
        "}\n"
        "QScrollBar::handle:horizontal:hover{\n"
        "    background-color: rgb(70, 220, 255);\n"
        "}\n"
        "QScrollBar::handle:horizontal:pressed{\n"
        "    background-color: rgb(30, 180, 255);\n"
        "}\n"
        "QScrollBar::sub-line:horizontal{\n"
        "    border: none;\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    width: 15px;\n"
        "    border-top-left-radius: 7px;\n"
        "    border-top-right-radius: 7px; \n"
        "    subcontrol-posiiton: top;\n"
        "    subcontrol-origin: margin;\n"
        "}\n"
        "QScrollBar::sub-line:horizontal:hover{\n"
        "    background-color: rgb(70, 220, 255);\n"
        "}\n"
        "QScrollBar::sub-line:horizontal:pressed{\n"
        "    background-color: rgb(30, 180, 255);\n"
        "}\n"
        "QScrollBar::add-line:horizontal{\n"
        "    border: none;\n"
        "    background-color: rgb(50, 200, 255);\n"
        "    width: 15px;\n"
        "    border-bottom-left-radius: 7px;\n"
        "    border-botton-right-radius: 7px;\n"
        "    subcontrol-posiiton: botton;\n"
        "    subcontrol-origin: margin;\n"
        "}\n"
        "")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
                self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout.setSpacing(0)
                self.horizontalLayout.setObjectName("horizontalLayout")
                self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
                self.scrollArea.setStyleSheet("QScrollBar:vertical{\n"
        "    border: none;\n"
        "    background-color: rgb(170, 255, 255);\n"
        "}")
                self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
                self.scrollArea.setWidgetResizable(True)
                self.scrollArea.setObjectName("scrollArea")
                self.scrollAreaWidgetContents = QtWidgets.QWidget()
                self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, -177, 1491, 700))
                self.scrollAreaWidgetContents.setStyleSheet("")
                self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents)
                self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout_2.setSpacing(0)
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")
                self.frame_fill_fiedls = QtWidgets.QFrame(self.scrollAreaWidgetContents)
                self.frame_fill_fiedls.setMinimumSize(QtCore.QSize(700, 700))
                self.frame_fill_fiedls.setStyleSheet("background-color: rgb(170, 255, 255);")
                self.frame_fill_fiedls.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_fill_fiedls.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_fill_fiedls.setObjectName("frame_fill_fiedls")
                self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_fill_fiedls)
                self.horizontalLayout_3.setObjectName("horizontalLayout_3")
                self.frame_logo_name = QtWidgets.QFrame(self.frame_fill_fiedls)
                self.frame_logo_name.setMinimumSize(QtCore.QSize(255, 200))
                self.frame_logo_name.setMaximumSize(QtCore.QSize(16777215, 16777215))
                self.frame_logo_name.setStyleSheet("QFrame{\n"
        "    image: url(:/Logo/sgt_logo_200x144.png);\n"
        "    image-position: top 2px;\n"
        "    border: no-border;\n"
        "}")
                self.frame_logo_name.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_logo_name.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_logo_name.setObjectName("frame_logo_name")
                self.textBrowser_logo_name_credits = QtWidgets.QTextBrowser(self.frame_logo_name)
                self.textBrowser_logo_name_credits.setGeometry(QtCore.QRect(10, 150, 281, 1000))
                self.textBrowser_logo_name_credits.setMinimumSize(QtCore.QSize(0, 1000))
                self.textBrowser_logo_name_credits.setObjectName("textBrowser_logo_name_credits")
                self.horizontalLayout_3.addWidget(self.frame_logo_name)
                self.frame_coverages_outside = QtWidgets.QFrame(self.frame_fill_fiedls)
                self.frame_coverages_outside.setMinimumSize(QtCore.QSize(150, 0))
                self.frame_coverages_outside.setMaximumSize(QtCore.QSize(300, 16777215))
                self.frame_coverages_outside.setStyleSheet("background-image: url(./src/images/background-blue-1715x980.jpg);\n"
        "border-radius: 8px;")
                self.frame_coverages_outside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_coverages_outside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_coverages_outside.setObjectName("frame_coverages_outside")
                self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_coverages_outside)
                self.verticalLayout_4.setObjectName("verticalLayout_4")
                self.frame_coverages_inside = QtWidgets.QFrame(self.frame_coverages_outside)
                self.frame_coverages_inside.setMinimumSize(QtCore.QSize(50, 50))
                self.frame_coverages_inside.setStyleSheet("QFrame{\n"
        "    border: 2px solid rgb(36, 183, 253);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_coverages_inside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_coverages_inside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_coverages_inside.setObjectName("frame_coverages_inside")
                self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_coverages_inside)
                self.verticalLayout.setObjectName("verticalLayout")
                self.label_coverage = QtWidgets.QLabel(self.frame_coverages_inside)
                self.label_coverage.setMinimumSize(QtCore.QSize(0, 0))
                self.label_coverage.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_coverage.setFont(font)
                self.label_coverage.setStyleSheet("border: no-border")
                self.label_coverage.setAlignment(QtCore.Qt.AlignCenter)
                self.label_coverage.setObjectName("label_coverage")
                self.verticalLayout.addWidget(self.label_coverage)
                self.checkBox_monitoring = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_monitoring.setFont(font)
                self.checkBox_monitoring.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_monitoring.setObjectName("checkBox_monitoring")
                self.verticalLayout.addWidget(self.checkBox_monitoring)
                self.checkBox_robbery = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_robbery.setFont(font)
                self.checkBox_robbery.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_robbery.setObjectName("checkBox_robbery")
                self.verticalLayout.addWidget(self.checkBox_robbery)
                self.checkBox_theft = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_theft.setFont(font)
                self.checkBox_theft.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_theft.setObjectName("checkBox_theft")
                self.verticalLayout.addWidget(self.checkBox_theft)
                self.checkBox_pt = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_pt.setFont(font)
                self.checkBox_pt.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_pt.setObjectName("checkBox_pt")
                self.verticalLayout.addWidget(self.checkBox_pt)
                self.checkBox_collision = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_collision.setFont(font)
                self.checkBox_collision.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_collision.setObjectName("checkBox_collision")
                self.verticalLayout.addWidget(self.checkBox_collision)
                self.checkBox_winch3 = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_winch3.setFont(font)
                self.checkBox_winch3.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_winch3.setObjectName("checkBox_winch3")
                self.verticalLayout.addWidget(self.checkBox_winch3)
                self.checkBox_winch6 = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_winch6.setFont(font)
                self.checkBox_winch6.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_winch6.setObjectName("checkBox_winch6")
                self.verticalLayout.addWidget(self.checkBox_winch6)
                self.checkBox_unlimited_winch = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_unlimited_winch.setFont(font)
                self.checkBox_unlimited_winch.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_unlimited_winch.setObjectName("checkBox_unlimited_winch")
                self.verticalLayout.addWidget(self.checkBox_unlimited_winch)
                self.checkBox_winch500 = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_winch500.setFont(font)
                self.checkBox_winch500.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_winch500.setObjectName("checkBox_winch500")
                self.verticalLayout.addWidget(self.checkBox_winch500)
                self.checkBox_glasses = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_glasses.setFont(font)
                self.checkBox_glasses.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_glasses.setObjectName("checkBox_glasses")
                self.verticalLayout.addWidget(self.checkBox_glasses)
                self.checkBox_others = QtWidgets.QCheckBox(self.frame_coverages_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.checkBox_others.setFont(font)
                self.checkBox_others.setStyleSheet("QCheckBox{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QCheckBox:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.checkBox_others.setObjectName("checkBox_others")
                self.verticalLayout.addWidget(self.checkBox_others)
                self.verticalLayout_4.addWidget(self.frame_coverages_inside)
                self.horizontalLayout_3.addWidget(self.frame_coverages_outside)
                self.frame_client_data_outside = QtWidgets.QFrame(self.frame_fill_fiedls)
                self.frame_client_data_outside.setMinimumSize(QtCore.QSize(150, 0))
                self.frame_client_data_outside.setMaximumSize(QtCore.QSize(300, 16777215))
                self.frame_client_data_outside.setStyleSheet("background-image: url(././src/images/background-blue-1715x980.jpg);border-radius: 8px;")
                self.frame_client_data_outside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_client_data_outside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_client_data_outside.setObjectName("frame_client_data_outside")
                self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_client_data_outside)
                self.verticalLayout_2.setObjectName("verticalLayout_2")
                self.frame_client_data_inside = QtWidgets.QFrame(self.frame_client_data_outside)
                self.frame_client_data_inside.setMinimumSize(QtCore.QSize(150, 50))
                self.frame_client_data_inside.setStyleSheet("QFrame{\n"
        "    border: 2px solid rgb(36, 183, 253);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_client_data_inside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_client_data_inside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_client_data_inside.setObjectName("frame_client_data_inside")
                self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_client_data_inside)
                self.verticalLayout_5.setObjectName("verticalLayout_5")
                self.label_clientdata = QtWidgets.QLabel(self.frame_client_data_inside)
                self.label_clientdata.setMinimumSize(QtCore.QSize(0, 0))
                self.label_clientdata.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_clientdata.setFont(font)
                self.label_clientdata.setStyleSheet("border:no")
                self.label_clientdata.setAlignment(QtCore.Qt.AlignCenter)
                self.label_clientdata.setObjectName("label_clientdata")
                self.verticalLayout_5.addWidget(self.label_clientdata)
                self.lineEdit_name = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_name.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_name.setObjectName("lineEdit_name")
                self.verticalLayout_5.addWidget(self.lineEdit_name)
                self.lineEdit_rg = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_rg.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_rg.setObjectName("lineEdit_rg")
                self.verticalLayout_5.addWidget(self.lineEdit_rg)
                self.lineEdit_cpf = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_cpf.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_cpf.setObjectName("lineEdit_cpf")
                self.verticalLayout_5.addWidget(self.lineEdit_cpf)
                self.lineEdit_birth = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_birth.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_birth.setObjectName("lineEdit_birth")
                self.verticalLayout_5.addWidget(self.lineEdit_birth)
                self.lineEdit_nationality = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_nationality.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_nationality.setObjectName("lineEdit_nationality")
                self.verticalLayout_5.addWidget(self.lineEdit_nationality)
                self.lineEdit_phone1 = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_phone1.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_phone1.setObjectName("lineEdit_phone1")
                self.verticalLayout_5.addWidget(self.lineEdit_phone1)
                self.lineEdit_phone2 = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_phone2.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_phone2.setObjectName("lineEdit_phone2")
                self.verticalLayout_5.addWidget(self.lineEdit_phone2)
                self.label_adress = QtWidgets.QLabel(self.frame_client_data_inside)
                self.label_adress.setMinimumSize(QtCore.QSize(0, 0))
                self.label_adress.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(8)
                font.setBold(False)
                font.setWeight(50)
                self.label_adress.setFont(font)
                self.label_adress.setStyleSheet("border-color: rgb(36, 183, 253);")
                self.label_adress.setAlignment(QtCore.Qt.AlignCenter)
                self.label_adress.setObjectName("label_adress")
                self.verticalLayout_5.addWidget(self.label_adress)
                self.lineEdit_street = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_street.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_street.setObjectName("lineEdit_street")
                self.verticalLayout_5.addWidget(self.lineEdit_street)
                self.lineEdit_number = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_number.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_number.setObjectName("lineEdit_number")
                self.verticalLayout_5.addWidget(self.lineEdit_number)
                self.lineEdit_comp = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_comp.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_comp.setObjectName("lineEdit_comp")
                self.verticalLayout_5.addWidget(self.lineEdit_comp)
                self.lineEdit_neghbordhood = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_neghbordhood.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_neghbordhood.setObjectName("lineEdit_neghbordhood")
                self.verticalLayout_5.addWidget(self.lineEdit_neghbordhood)
                self.lineEdit_city = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_city.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_city.setObjectName("lineEdit_city")
                self.verticalLayout_5.addWidget(self.lineEdit_city)
                self.lineEdit_uf = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_uf.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_uf.setObjectName("lineEdit_uf")
                self.verticalLayout_5.addWidget(self.lineEdit_uf)
                self.lineEdit_cep = QtWidgets.QLineEdit(self.frame_client_data_inside)
                self.lineEdit_cep.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_cep.setObjectName("lineEdit_cep")
                self.verticalLayout_5.addWidget(self.lineEdit_cep)
                self.verticalLayout_2.addWidget(self.frame_client_data_inside)
                self.horizontalLayout_3.addWidget(self.frame_client_data_outside)
                self.frame_vehicle_pain_data_outside = QtWidgets.QFrame(self.frame_fill_fiedls)
                self.frame_vehicle_pain_data_outside.setMinimumSize(QtCore.QSize(0, 0))
                self.frame_vehicle_pain_data_outside.setMaximumSize(QtCore.QSize(300, 16777215))
                self.frame_vehicle_pain_data_outside.setStyleSheet("background-image: url(././src/images/background-blue-1715x980.jpg);border-radius: 8px;")
                self.frame_vehicle_pain_data_outside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_vehicle_pain_data_outside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_vehicle_pain_data_outside.setObjectName("frame_vehicle_pain_data_outside")
                self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_vehicle_pain_data_outside)
                self.verticalLayout_9.setObjectName("verticalLayout_9")
                self.frame_vehicle_plain_data_inside = QtWidgets.QFrame(self.frame_vehicle_pain_data_outside)
                self.frame_vehicle_plain_data_inside.setMinimumSize(QtCore.QSize(150, 50))
                self.frame_vehicle_plain_data_inside.setStyleSheet("QFrame{\n"
        "    border: 2px solid rgb(36, 183, 253);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_vehicle_plain_data_inside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_vehicle_plain_data_inside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_vehicle_plain_data_inside.setObjectName("frame_vehicle_plain_data_inside")
                self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_vehicle_plain_data_inside)
                self.verticalLayout_3.setObjectName("verticalLayout_3")
                self.label_vehicle = QtWidgets.QLabel(self.frame_vehicle_plain_data_inside)
                self.label_vehicle.setMinimumSize(QtCore.QSize(0, 0))
                self.label_vehicle.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_vehicle.setFont(font)
                self.label_vehicle.setStyleSheet("border:no")
                self.label_vehicle.setAlignment(QtCore.Qt.AlignCenter)
                self.label_vehicle.setObjectName("label_vehicle")
                self.verticalLayout_3.addWidget(self.label_vehicle)
                self.lineEdit_assembler = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_assembler.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_assembler.setObjectName("lineEdit_assembler")
                self.verticalLayout_3.addWidget(self.lineEdit_assembler)
                self.lineEdit_model = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_model.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_model.setObjectName("lineEdit_model")
                self.verticalLayout_3.addWidget(self.lineEdit_model)
                self.lineEdit_plate = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_plate.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_plate.setObjectName("lineEdit_plate")
                self.verticalLayout_3.addWidget(self.lineEdit_plate)
                self.lineEdit_color = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_color.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_color.setObjectName("lineEdit_color")
                self.verticalLayout_3.addWidget(self.lineEdit_color)
                self.lineEdit_year = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_year.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_year.setObjectName("lineEdit_year")
                self.verticalLayout_3.addWidget(self.lineEdit_year)
                self.lineEdit_chassis = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_chassis.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_chassis.setObjectName("lineEdit_chassis")
                self.verticalLayout_3.addWidget(self.lineEdit_chassis)
                self.lineEdit_renavam = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_renavam.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_renavam.setObjectName("lineEdit_renavam")
                self.verticalLayout_3.addWidget(self.lineEdit_renavam)
                self.lineEdit_fipe_value = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_fipe_value.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_fipe_value.setObjectName("lineEdit_fipe_value")
                self.verticalLayout_3.addWidget(self.lineEdit_fipe_value)
                self.lineEdit_fipe_code = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_fipe_code.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_fipe_code.setObjectName("lineEdit_fipe_code")
                self.verticalLayout_3.addWidget(self.lineEdit_fipe_code)
                self.lineEdit_hora = QtWidgets.QLineEdit(self.frame_vehicle_plain_data_inside)
                self.lineEdit_hora.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(148, 148, 148);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_hora.setObjectName("lineEdit_hora")
                self.verticalLayout_3.addWidget(self.lineEdit_hora)
                self.verticalLayout_9.addWidget(self.frame_vehicle_plain_data_inside)
                self.frame_plaintype_inside = QtWidgets.QFrame(self.frame_vehicle_pain_data_outside)
                self.frame_plaintype_inside.setMinimumSize(QtCore.QSize(1, 221))
                self.frame_plaintype_inside.setStyleSheet("QFrame{\n"
        "    border: 2px solid rgb(36, 183, 253);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_plaintype_inside.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_plaintype_inside.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_plaintype_inside.setObjectName("frame_plaintype_inside")
                self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.frame_plaintype_inside)
                self.verticalLayout_11.setObjectName("verticalLayout_11")
                self.label_playntype = QtWidgets.QLabel(self.frame_plaintype_inside)
                self.label_playntype.setMinimumSize(QtCore.QSize(0, 0))
                self.label_playntype.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_playntype.setFont(font)
                self.label_playntype.setStyleSheet("border: no")
                self.label_playntype.setAlignment(QtCore.Qt.AlignCenter)
                self.label_playntype.setObjectName("label_playntype")
                self.verticalLayout_11.addWidget(self.label_playntype)
                self.radioButton_monitoring = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_monitoring.setFont(font)
                self.radioButton_monitoring.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_monitoring.setObjectName("radioButton_monitoring")
                self.verticalLayout_11.addWidget(self.radioButton_monitoring)
                self.radioButton_bronze01 = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_bronze01.setFont(font)
                self.radioButton_bronze01.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_bronze01.setObjectName("radioButton_bronze01")
                self.verticalLayout_11.addWidget(self.radioButton_bronze01)
                self.radioButton_bronze02 = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_bronze02.setFont(font)
                self.radioButton_bronze02.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_bronze02.setObjectName("radioButton_bronze02")
                self.verticalLayout_11.addWidget(self.radioButton_bronze02)
                self.radioButton_silver01 = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_silver01.setFont(font)
                self.radioButton_silver01.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_silver01.setObjectName("radioButton_silver01")
                self.verticalLayout_11.addWidget(self.radioButton_silver01)
                self.radioButton_silver02 = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_silver02.setFont(font)
                self.radioButton_silver02.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_silver02.setObjectName("radioButton_silver02")
                self.verticalLayout_11.addWidget(self.radioButton_silver02)
                self.radioButton_gold = QtWidgets.QRadioButton(self.frame_plaintype_inside)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.radioButton_gold.setFont(font)
                self.radioButton_gold.setStyleSheet("QRadioButton{\n"
        "    background-color: rgb(92, 230, 255);\n"
        "}\n"
        "QRadioButton:hover{\n"
        "    color: rgb(0, 0, 255);\n"
        "}")
                self.radioButton_gold.setObjectName("radioButton_gold")
                self.verticalLayout_11.addWidget(self.radioButton_gold)
                self.verticalLayout_9.addWidget(self.frame_plaintype_inside)
                self.horizontalLayout_3.addWidget(self.frame_vehicle_pain_data_outside)
                self.frame_financial_buttons_company_data = QtWidgets.QFrame(self.frame_fill_fiedls)
                self.frame_financial_buttons_company_data.setMinimumSize(QtCore.QSize(0, 0))
                self.frame_financial_buttons_company_data.setMaximumSize(QtCore.QSize(300, 16777215))
                self.frame_financial_buttons_company_data.setStyleSheet("")
                self.frame_financial_buttons_company_data.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_financial_buttons_company_data.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_financial_buttons_company_data.setObjectName("frame_financial_buttons_company_data")
                self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_financial_buttons_company_data)
                self.verticalLayout_10.setObjectName("verticalLayout_10")
                self.frame_financial = QtWidgets.QFrame(self.frame_financial_buttons_company_data)
                self.frame_financial.setMinimumSize(QtCore.QSize(161, 286))
                self.frame_financial.setMaximumSize(QtCore.QSize(300, 16777215))
                self.frame_financial.setStyleSheet("QFrame{\n"
        "    background-color: rgb(139, 253, 137);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_financial.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_financial.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_financial.setObjectName("frame_financial")
                self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_financial)
                self.verticalLayout_6.setObjectName("verticalLayout_6")
                self.label_finance = QtWidgets.QLabel(self.frame_financial)
                self.label_finance.setMinimumSize(QtCore.QSize(0, 0))
                self.label_finance.setMaximumSize(QtCore.QSize(16777215, 20))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_finance.setFont(font)
                self.label_finance.setStyleSheet("QLabel{\n"
        "    border:no;\n"
        "}")
                self.label_finance.setAlignment(QtCore.Qt.AlignCenter)
                self.label_finance.setObjectName("label_finance")
                self.verticalLayout_6.addWidget(self.label_finance)
                self.lineEdit_monthly_payment = QtWidgets.QLineEdit(self.frame_financial)
                self.lineEdit_monthly_payment.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(142, 216, 141);\n"
        "    border: 2px solid rgb(0, 102, 52);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 2px solid rgb(100, 202, 152);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(0, 0, 255);\n"
        "}")
                self.lineEdit_monthly_payment.setObjectName("lineEdit_monthly_payment")
                self.verticalLayout_6.addWidget(self.lineEdit_monthly_payment)
                self.lineEdit_membership_fee = QtWidgets.QLineEdit(self.frame_financial)
                self.lineEdit_membership_fee.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(142, 216, 141);\n"
        "    border: 2px solid rgb(0, 102, 52);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 2px solid rgb(100, 202, 152);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(0, 0, 255);\n"
        "}")
                self.lineEdit_membership_fee.setObjectName("lineEdit_membership_fee")
                self.verticalLayout_6.addWidget(self.lineEdit_membership_fee)
                self.lineEdit_total_payment = QtWidgets.QLineEdit(self.frame_financial)
                self.lineEdit_total_payment.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(142, 216, 141);\n"
        "    border: 2px solid rgb(0, 102, 52);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 2px solid rgb(100, 202, 152);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(0, 0, 255);\n"
"}")
                self.lineEdit_total_payment.setObjectName("lineEdit_total_payment")
                self.verticalLayout_6.addWidget(self.lineEdit_total_payment)
                self.frame_playndate = QtWidgets.QFrame(self.frame_financial)
                self.frame_playndate.setMaximumSize(QtCore.QSize(16777215, 142))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.frame_playndate.setFont(font)
                self.frame_playndate.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_playndate.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_playndate.setObjectName("frame_playndate")
                self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_playndate)
                self.verticalLayout_12.setObjectName("verticalLayout_12")
                self.label_start = QtWidgets.QLabel(self.frame_playndate)
                self.label_start.setMaximumSize(QtCore.QSize(16777215, 30))
                font = QtGui.QFont()
                font.setBold(True)
                font.setWeight(75)
                self.label_start.setFont(font)
                self.label_start.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.label_start.setObjectName("label_start")
                self.verticalLayout_12.addWidget(self.label_start)
                self.dateEdit_start = QtWidgets.QDateEdit(self.frame_playndate)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.dateEdit_start.setFont(font)
                self.dateEdit_start.setStyleSheet("")
                self.dateEdit_start.setObjectName("dateEdit_start")
                self.verticalLayout_12.addWidget(self.dateEdit_start)
                self.label_finish = QtWidgets.QLabel(self.frame_playndate)
                self.label_finish.setMaximumSize(QtCore.QSize(16777215, 30))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.label_finish.setFont(font)
                self.label_finish.setObjectName("label_finish")
                self.verticalLayout_12.addWidget(self.label_finish)
                self.dateEdit_finish = QtWidgets.QDateEdit(self.frame_playndate)
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.dateEdit_finish.setFont(font)
                self.dateEdit_finish.setObjectName("dateEdit_finish")
                self.verticalLayout_12.addWidget(self.dateEdit_finish)
                self.verticalLayout_6.addWidget(self.frame_playndate)
                self.frame_playndate_2 = QtWidgets.QFrame(self.frame_financial)
                self.frame_playndate_2.setMinimumSize(QtCore.QSize(0, 0))
                self.frame_playndate_2.setMaximumSize(QtCore.QSize(16777215, 142))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.frame_playndate_2.setFont(font)
                self.frame_playndate_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_playndate_2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_playndate_2.setObjectName("frame_playndate_2")
                self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_playndate_2)
                self.verticalLayout_8.setObjectName("verticalLayout_8")
                self.label_detail_recibo = QtWidgets.QLabel(self.frame_playndate_2)
                self.label_detail_recibo.setMaximumSize(QtCore.QSize(16777215, 30))
                font = QtGui.QFont()
                font.setBold(True)
                font.setWeight(75)
                self.label_detail_recibo.setFont(font)
                self.label_detail_recibo.setTextFormat(QtCore.Qt.PlainText)
                self.label_detail_recibo.setAlignment(QtCore.Qt.AlignCenter)
                self.label_detail_recibo.setObjectName("label_detail_recibo")
                self.verticalLayout_8.addWidget(self.label_detail_recibo)
                self.textEdit_detail_pagto_obs = QtWidgets.QTextEdit(self.frame_playndate_2)
                self.textEdit_detail_pagto_obs.setMinimumSize(QtCore.QSize(0, 58))
                self.textEdit_detail_pagto_obs.setStyleSheet("QTextEdit{\n"
        "    \n"
        "    background-color: rgb(142, 216, 141);\n"
        "    border: 2px solid rgb(0, 102, 52);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QTextEdit:hover{\n"
        "    border: 2px solid rgb(100, 202, 152);\n"
        "}\n"
        "QTextEdit:focus{\n"
        "    border: 2px solid rgb(0, 0, 255);\n"
        "}")
                self.textEdit_detail_pagto_obs.setObjectName("textEdit_detail_pagto_obs")
                self.verticalLayout_8.addWidget(self.textEdit_detail_pagto_obs)
                self.label_formapagto = QtWidgets.QLabel(self.frame_playndate_2)
                self.label_formapagto.setMaximumSize(QtCore.QSize(16777215, 30))
                font = QtGui.QFont()
                font.setBold(True)
                font.setWeight(75)
                self.label_formapagto.setFont(font)
                self.label_formapagto.setTextFormat(QtCore.Qt.PlainText)
                self.label_formapagto.setAlignment(QtCore.Qt.AlignCenter)
                self.label_formapagto.setObjectName("label_formapagto")
                self.verticalLayout_8.addWidget(self.label_formapagto)
                self.comboBox_formapagto = QtWidgets.QComboBox(self.frame_playndate_2)
                self.payments = ['BOLETO','DINHEIRO','DÉBITO','CRÉDITO','TRANSFERÊNCIA', 'DEPÓSITO BANCÁRIO','PIX', 'NÃO INFORMADO']
                self.comboBox_formapagto.addItems(self.payments)
                self.comboBox_formapagto.setStyleSheet("QComboBox{\n"
        "    border-radius: 2px; font: bold;\n"
        "}")
                self.comboBox_formapagto.setObjectName("comboBox_formapagto")
                self.verticalLayout_8.addWidget(self.comboBox_formapagto)
                self.verticalLayout_6.addWidget(self.frame_playndate_2)
                self.verticalLayout_10.addWidget(self.frame_financial)
                self.frame_company_data_outside_2 = QtWidgets.QFrame(self.frame_financial_buttons_company_data)
                self.frame_company_data_outside_2.setMinimumSize(QtCore.QSize(150, 120))
                self.frame_company_data_outside_2.setMaximumSize(QtCore.QSize(300, 200))
                self.frame_company_data_outside_2.setStyleSheet("border-radius: 8px;\n"
        "background-color: rgb(170, 255, 255);")
                self.frame_company_data_outside_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_company_data_outside_2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_company_data_outside_2.setObjectName("frame_company_data_outside_2")
                self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_company_data_outside_2)
                self.horizontalLayout_4.setObjectName("horizontalLayout_4")
                self.frame_company_data = QtWidgets.QFrame(self.frame_company_data_outside_2)
                self.frame_company_data.setMinimumSize(QtCore.QSize(150, 118))
                self.frame_company_data.setStyleSheet("QFrame{\n"
        "    border: 2px solid rgb(36, 183, 253);\n"
        "    border-radius: 8px;\n"
        "}")
                self.frame_company_data.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_company_data.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_company_data.setObjectName("frame_company_data")
                self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.frame_company_data)
                self.verticalLayout_13.setObjectName("verticalLayout_13")
                self.label_company_data = QtWidgets.QLabel(self.frame_company_data)
                self.label_company_data.setMinimumSize(QtCore.QSize(0, 0))
                self.label_company_data.setMaximumSize(QtCore.QSize(16777215, 15))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.label_company_data.setFont(font)
                self.label_company_data.setStyleSheet("border:no")
                self.label_company_data.setAlignment(QtCore.Qt.AlignCenter)
                self.label_company_data.setObjectName("label_company_data")
                self.verticalLayout_13.addWidget(self.label_company_data)
                self.lineEdit_razao_social = QtWidgets.QLineEdit(self.frame_company_data)
                self.lineEdit_razao_social.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(103, 229, 254);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_razao_social.setObjectName("lineEdit_razao_social")
                self.verticalLayout_13.addWidget(self.lineEdit_razao_social)
                self.lineEdit_cnpj = QtWidgets.QLineEdit(self.frame_company_data)
                self.lineEdit_cnpj.setStyleSheet("QLineEdit{\n"
        "    \n"
        "    background-color: rgb(103, 229, 254);\n"
        "    border: 1px solid rgb(10,10,10);\n"
        "    border-radius: 5px;\n"
        "    padding: 2px;\n"
        "}\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QLineEdit:focus{\n"
        "    border: 2px solid rgb(100, 100, 255);\n"
        "}")
                self.lineEdit_cnpj.setObjectName("lineEdit_cnpj")
                self.verticalLayout_13.addWidget(self.lineEdit_cnpj)
                self.horizontalLayout_4.addWidget(self.frame_company_data)
                self.verticalLayout_10.addWidget(self.frame_company_data_outside_2)
                self.frame_buttons_observations = QtWidgets.QFrame(self.frame_financial_buttons_company_data)
                self.frame_buttons_observations.setMaximumSize(QtCore.QSize(16777215, 200))
                self.frame_buttons_observations.setStyleSheet("QFrame{\n"
        "    border: no\n"
        "}")
                self.frame_buttons_observations.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_buttons_observations.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_buttons_observations.setObjectName("frame_buttons_observations")
                self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_buttons_observations)
                self.verticalLayout_7.setObjectName("verticalLayout_7")
                self.pushButton_adhesion = QtWidgets.QPushButton(self.frame_buttons_observations)
                self.pushButton_adhesion.setMinimumSize(QtCore.QSize(20, 22))
                self.pushButton_adhesion.setMaximumSize(QtCore.QSize(16777215, 16777215))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.pushButton_adhesion.setFont(font)
                self.pushButton_adhesion.setStyleSheet("QPushButton{\n"
        "    border: 1px solid rgb(10, 10, 10);\n"
        "    border-radius: 5px;\n"
        "    background-color: rgb(136, 230, 253);\n"
        "}\n"
        "QPushButton:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QPushButton:pressed{\n"
        "    border: 2px solid rgb(50, 50, 255);\n"
        "}")
                self.pushButton_adhesion.setObjectName("pushButton_adhesion")
                self.verticalLayout_7.addWidget(self.pushButton_adhesion)
                self.pushButton_forwarding = QtWidgets.QPushButton(self.frame_buttons_observations)
                self.pushButton_forwarding.setMinimumSize(QtCore.QSize(20, 22))
                self.pushButton_forwarding.setMaximumSize(QtCore.QSize(16777215, 16777215))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.pushButton_forwarding.setFont(font)
                self.pushButton_forwarding.setStyleSheet("QPushButton{\n"
        "    border: 1px solid rgb(10, 10, 10);\n"
        "    border-radius: 5px;\n"
        "    background-color: rgb(136, 230, 253);\n"
        "}\n"
        "QPushButton:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QPushButton:pressed{\n"
        "    border: 2px solid rgb(50, 50, 255);\n"
        "}")
                self.pushButton_forwarding.setObjectName("pushButton_forwarding")
                self.verticalLayout_7.addWidget(self.pushButton_forwarding)
                self.pushButton_vehicle_delivery = QtWidgets.QPushButton(self.frame_buttons_observations)
                self.pushButton_vehicle_delivery.setMinimumSize(QtCore.QSize(20, 22))
                self.pushButton_vehicle_delivery.setMaximumSize(QtCore.QSize(16777215, 16777215))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.pushButton_vehicle_delivery.setFont(font)
                self.pushButton_vehicle_delivery.setStyleSheet("QPushButton{\n"
        "    border: 1px solid rgb(10, 10, 10);\n"
        "    border-radius: 5px;\n"
        "    background-color: rgb(136, 230, 253);\n"
        "}\n"
        "QPushButton:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QPushButton:pressed{\n"
        "    border: 2px solid rgb(50, 50, 255);\n"
        "}")
                self.pushButton_vehicle_delivery.setObjectName("pushButton_vehicle_delivery")
                self.verticalLayout_7.addWidget(self.pushButton_vehicle_delivery)
                self.pushButton_receipt = QtWidgets.QPushButton(self.frame_buttons_observations)
                self.pushButton_receipt.setMinimumSize(QtCore.QSize(20, 22))
                self.pushButton_receipt.setMaximumSize(QtCore.QSize(16777215, 16777215))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                self.pushButton_receipt.setFont(font)
                self.pushButton_receipt.setStyleSheet("QPushButton{\n"
        "    border: 1px solid rgb(10, 10, 10);\n"
        "    border-radius: 5px;\n"
        "    background-color: rgb(136, 230, 253);\n"
        "}\n"
        "QPushButton:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QPushButton:pressed{\n"
        "    border: 2px solid rgb(50, 50, 255);\n"
        "}")
                self.pushButton_receipt.setObjectName("pushButton_receipt")
                self.verticalLayout_7.addWidget(self.pushButton_receipt)
                self.pushButton_cancel = QtWidgets.QPushButton(self.frame_buttons_observations)
                self.pushButton_cancel.setMinimumSize(QtCore.QSize(20, 22))
                self.pushButton_cancel.setMaximumSize(QtCore.QSize(16777215, 16777215))
                font = QtGui.QFont()
                font.setFamily("Segoe UI")
                font.setBold(True)
                font.setWeight(75)
                self.pushButton_cancel.setFont(font)
                self.pushButton_cancel.setStyleSheet("QPushButton{\n"
        "    border: 1px solid rgb(10, 10, 10);\n"
        "    border-radius: 5px;\n"
        "    background-color: rgb(136, 230, 253);\n"
        "    color: rgb(255, 0, 0);\n"
        "}\n"
        "QPushButton:hover{\n"
        "    border: 1px solid rgb(150,150,150);\n"
        "}\n"
        "QPushButton:pressed{\n"
        "    border: 2px solid rgb(255, 0, 0);\n"
        "}")
                self.pushButton_cancel.setObjectName("pushButton_cancel")
                self.verticalLayout_7.addWidget(self.pushButton_cancel)
                self.verticalLayout_10.addWidget(self.frame_buttons_observations)
                self.horizontalLayout_3.addWidget(self.frame_financial_buttons_company_data)
                self.horizontalLayout_2.addWidget(self.frame_fill_fiedls)
                self.scrollArea.setWidget(self.scrollAreaWidgetContents)
                self.horizontalLayout.addWidget(self.scrollArea)
                MainWindow.setCentralWidget(self.centralwidget)
                self.actionGerar_termo_de_ades_o = QtWidgets.QAction(MainWindow)
                self.actionGerar_termo_de_ades_o.setObjectName("actionGerar_termo_de_ades_o")
                self.actionNovo = QtWidgets.QAction(MainWindow)
                self.actionNovo.setObjectName("actionNovo")
                self.actionSalvar = QtWidgets.QAction(MainWindow)
                self.actionSalvar.setObjectName("actionSalvar")
                self.actionGerar_Termo_em_PDF = QtWidgets.QAction(MainWindow)
                self.actionGerar_Termo_em_PDF.setObjectName("actionGerar_Termo_em_PDF")
                self.actionImprimir_Termo = QtWidgets.QAction(MainWindow)
                self.actionImprimir_Termo.setObjectName("actionImprimir_Termo")
                self.actionImprimir_Termo_2 = QtWidgets.QAction(MainWindow)
                self.actionImprimir_Termo_2.setObjectName("actionImprimir_Termo_2")


                #
                #FUNÇÕES
                #

                self.pushButton_adhesion.pressed.connect(self.GerarTermoDeAdesao)
                self.pushButton_forwarding.pressed.connect(self.GerarTermoDeEncaminhamento)
                self.pushButton_vehicle_delivery.pressed.connect(self.GerarTermoDeEntregaDeVeiculo)
                self.pushButton_cancel.pressed.connect(self.GerarTermoDeCancelamento)
                self.pushButton_receipt.pressed.connect(self.GerarRecibo)

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "Sistema Gerador de Termos"))
                self.textBrowser_logo_name_credits.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
        "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
        "p, li { white-space: pre-wrap; }\n"
        "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
        "<p style=\" margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">SGT - Sistema Gerador de Termos</span></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; font-style:italic;\"><br /></p>\n"
        "<p style=\"-qt-paragraph-type:empty; margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
        "<p style=\" margin-top:5px; margin-bottom:5px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic; color:#0000ff;\">Created by Sérgio Lima</span></p></body></html>"))
                self.label_coverage.setText(_translate("MainWindow", "COBERTURAS"))
                self.checkBox_monitoring.setText(_translate("MainWindow", "Monitoramento e Rastreamento"))
                self.checkBox_robbery.setText(_translate("MainWindow", "Roubo"))
                self.checkBox_theft.setText(_translate("MainWindow", "Furto"))
                self.checkBox_pt.setText(_translate("MainWindow", "Perda Total"))
                self.checkBox_collision.setText(_translate("MainWindow", "Colisão do Associado"))
                self.checkBox_winch3.setText(_translate("MainWindow", "3 Reboques Gratuitos a.a."))
                self.checkBox_winch6.setText(_translate("MainWindow", "6 Reboques Gratuitos a.a."))
                self.checkBox_unlimited_winch.setText(_translate("MainWindow", "Reboque Ilimitado"))
                self.checkBox_winch500.setText(_translate("MainWindow", "Quinhentos Quilômetros de Reboque"))
                self.checkBox_glasses.setText(_translate("MainWindow", "Vidros em Geral"))
                self.checkBox_others.setText(_translate("MainWindow", "Terceiros"))
                self.label_clientdata.setText(_translate("MainWindow", "DADOS DO CLIENTE"))
                self.lineEdit_name.setPlaceholderText(_translate("MainWindow", "NOME"))
                self.lineEdit_rg.setPlaceholderText(_translate("MainWindow", "RG"))
                self.lineEdit_cpf.setPlaceholderText(_translate("MainWindow", "CPF"))
                self.lineEdit_birth.setPlaceholderText(_translate("MainWindow", "DATA DE NASCIMENTO"))
                self.lineEdit_nationality.setPlaceholderText(_translate("MainWindow", "NACIONALIDADE"))
                self.lineEdit_phone1.setPlaceholderText(_translate("MainWindow", "TELEFONE 1"))
                self.lineEdit_phone2.setPlaceholderText(_translate("MainWindow", "TELEFONE 2"))
                self.label_adress.setText(_translate("MainWindow", "ENDEREÇO"))
                self.lineEdit_street.setPlaceholderText(_translate("MainWindow", "RUA/AV"))
                self.lineEdit_number.setPlaceholderText(_translate("MainWindow", "NUMERO"))
                self.lineEdit_comp.setPlaceholderText(_translate("MainWindow", "COMPLEMENTO"))
                self.lineEdit_neghbordhood.setPlaceholderText(_translate("MainWindow", "BAIRRO"))
                self.lineEdit_city.setPlaceholderText(_translate("MainWindow", "CIDADE"))
                self.lineEdit_uf.setPlaceholderText(_translate("MainWindow", "UF"))
                self.lineEdit_cep.setPlaceholderText(_translate("MainWindow", "CEP"))
                self.label_vehicle.setText(_translate("MainWindow", "DADOS DO VEÍCULO"))
                self.lineEdit_assembler.setPlaceholderText(_translate("MainWindow", "MONTADORA"))
                self.lineEdit_model.setPlaceholderText(_translate("MainWindow", "MODELO"))
                self.lineEdit_plate.setPlaceholderText(_translate("MainWindow", "PLACA"))
                self.lineEdit_color.setPlaceholderText(_translate("MainWindow", "COR"))
                self.lineEdit_year.setPlaceholderText(_translate("MainWindow", "ANO"))
                self.lineEdit_chassis.setPlaceholderText(_translate("MainWindow", "CHASSI"))
                self.lineEdit_renavam.setPlaceholderText(_translate("MainWindow", "RENAVAM"))
                self.lineEdit_fipe_value.setPlaceholderText(_translate("MainWindow", "FALOR - FIPE"))
                self.lineEdit_fipe_code.setPlaceholderText(_translate("MainWindow", "COD - FIPE"))
                self.lineEdit_hora.setPlaceholderText(_translate("MainWindow", "HORARIO DE EVENTOS"))
                self.label_playntype.setText(_translate("MainWindow", "TIPO DE PLANO"))
                self.radioButton_monitoring.setText(_translate("MainWindow", "Rastreamento e Monitoramento"))
                self.radioButton_bronze01.setText(_translate("MainWindow", "Bronze - 01"))
                self.radioButton_bronze02.setText(_translate("MainWindow", "Bronze - 02"))
                self.radioButton_silver01.setText(_translate("MainWindow", "Prata - 01"))
                self.radioButton_silver02.setText(_translate("MainWindow", "Prata - 02"))
                self.radioButton_gold.setText(_translate("MainWindow", "Ouro"))
                self.label_finance.setText(_translate("MainWindow", "FINANCEIRO"))
                self.lineEdit_monthly_payment.setPlaceholderText(_translate("MainWindow", "MENSALIDADE"))
                self.lineEdit_membership_fee.setPlaceholderText(_translate("MainWindow", "TAXA DE ADESÃO/CANCELAMENTO"))
                self.lineEdit_total_payment.setPlaceholderText(_translate("MainWindow", "PARCELA ÚNICA (PAGTO TOTAL DE PLANO)"))
                self.label_start.setText(_translate("MainWindow", "Plano válido de:"))
                self.label_finish.setText(_translate("MainWindow", "Até"))
                self.label_detail_recibo.setText(_translate("MainWindow", "Detalhamento para Recibo"))
                self.textEdit_detail_pagto_obs.setPlaceholderText(_translate("MainWindow", "OBSERVAÇÕES"))
                self.label_formapagto.setText(_translate("MainWindow", "Forma de Pagamento"))
                self.label_company_data.setText(_translate("MainWindow", "DADOS DA EMPRESA"))
                self.lineEdit_razao_social.setPlaceholderText(_translate("MainWindow", "RAZÃO SOCIAL"))
                self.lineEdit_cnpj.setPlaceholderText(_translate("MainWindow", "CNPJ"))
                self.pushButton_adhesion.setText(_translate("MainWindow", "Gerar Termo de Adesão"))
                self.pushButton_forwarding.setText(_translate("MainWindow", "Gerar Termo de Encaminhamento"))
                self.pushButton_vehicle_delivery.setText(_translate("MainWindow", "Gerar Termo de Entrega de Veículo"))
                self.pushButton_receipt.setText(_translate("MainWindow", "Gerar Recibo"))
                self.pushButton_cancel.setText(_translate("MainWindow", "Gerar Termo de Cancelamento"))
                self.actionGerar_termo_de_ades_o.setText(_translate("MainWindow", "Gerar termo de adesão"))
                self.actionNovo.setText(_translate("MainWindow", "Novo..."))
                self.actionSalvar.setText(_translate("MainWindow", "Salvar"))
                self.actionGerar_Termo_em_PDF.setText(_translate("MainWindow", "Gerar Termo em PDF"))
                self.actionImprimir_Termo.setText(_translate("MainWindow", "Imprimir Termo"))
                self.actionImprimir_Termo_2.setText(_translate("MainWindow", "Imprimir Termo"))
        import file_rc_SGT


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Adesao_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
